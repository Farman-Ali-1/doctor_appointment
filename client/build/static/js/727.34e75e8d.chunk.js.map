{"version":3,"file":"static/js/727.34e75e8d.chunk.js","mappings":"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","sources":["pages/Appointments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport \"../styles/appointment.css\";\n\nconst Appointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\n\n  const getAllAppoint = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(\n        `/appointment/getallappointments?search=${userId}`\n      );\n      setAppointments(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getAllAppoint();\n  }, []);\n\n  const complete = async (ele) => {\n    try {\n      await toast.promise(\n        axios.put(\n          \"/appointment/completed\",\n          {\n            appointid: ele?._id,\n            doctorId: ele?.doctorId?._id,\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        ),\n        {\n          success: \"Appointment Completed successfully\",\n          error: \"Unable to Complete Appointment\",\n          loading: \"Completing Appointment...\",\n        }\n      );\n\n      getAllAppoint();\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        if (error.response.data.error === \"Appointment has already been completed\") {\n            toast.error(\"Appointment Has Already Been Completed\");\n        } else if (error.response.data.error === \"No prescription found for this appointment\") {\n            toast.error(\"No Prescription Found For This Appointment\");\n        }\n    } else {\n        console.error(error);\n        toast.error(\"An error occurred. Please try again later.\");\n    }\n\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Appointments</h2>\n\n          {appointments.length > 0 ? (\n            <div className=\"appointments\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Doctor</th>\n                    <th>Patient</th>\n                    <th>Appointment Date</th>\n                    <th>Appointment Time</th>\n                    <th>Booking Date</th>\n                    <th>Booking Time</th>\n                    <th>Status</th>\n                    {userId === appointments[0].doctorId?._id ? (\n                      <th>Action</th>\n                    ) : (\n                      <></>\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {appointments?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          {ele?.doctorId?.firstname +\n                            \" \" +\n                            ele?.doctorId?.lastname}\n                        </td>\n                        <td>\n                          {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\n                        </td>\n                        <td>{ele?.date}</td>\n                        <td>{ele?.time}</td>\n                        <td>{ele?.createdAt.split(\"T\")[0]}</td>\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                        <td>{ele?.status}</td>\n                        {userId === ele?.doctorId?._id ? (\n                          <td>\n                            <button\n                              className={`btn user-btn accept-btn ${\n                                ele?.status === \"Completed\" ? \"disable-btn\" : \"\"\n                              }`}\n                              disabled={ele?.status === \"Completed\"}\n                              onClick={() => complete(ele)}\n                            >\n                              Complete\n                            </button>\n                          </td>\n                        ) : (\n                          <></>\n                        )}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\nexport default Appointments;\n"],"names":["useState","appointments","setAppointments","dispatch","useDispatch","loading","useSelector","state","root","userId","jwt_decode","localStorage","getItem","getAllAppoint","e","setLoading","fetchData","temp","useEffect","complete","ele","toast","axios","appointid","_id","doctorId","doctorname","firstname","lastname","headers","Authorization","success","error","response","status","data","console","Navbar","Loading","className","length","map","i","date","time","createdAt","split","updatedAt","disabled","onClick","Empty","Footer"],"sourceRoot":""}